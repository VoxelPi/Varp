[versions]
adventure = "4.17.0"
adventure-fabric = "5.14.1"
cloud-command = "2.0.0"
cloud-command-minecraft = "2.0.0-beta.10"
cloud-command-minecraft-modded = "2.0.0-beta.9"
configurate = "4.1.2"
coroutine = "1.9.0"
event = "0.6.2"
gson = "2.11.0"
junit = "5.11.2"
kotlin = "2.0.21"
log4j = "2.23.1"
slf4j = "1.7.36"

# CLI
terminalconsoleappender = "1.3.0"
jline = "3.26.3"

# Paper
papwerweight = "1.7.3"

# Fabric
minecraft = "1.21.1"
yarn = "1.21.1+build.3"
fabric-loader = "0.16.7"
fabric-api = "0.106.0+1.21.1"
loom = "1.8-SNAPSHOT"
fabric-kotlin = "1.12.3+kotlin.2.0.21"
fabric-permissions-api = "0.3.1"

# Plugins
blossom = "2.1.0"
dokka = "2.0.0-Beta"
indra = "3.1.3"
ktlint = "12.1.1"
run-task = "2.3.1"
shadow = "8.3.1"

[libraries]
adventure-api = { module = "net.kyori:adventure-api", version.ref = "adventure" }
adventure-text-minimessage = { module = "net.kyori:adventure-text-minimessage", version.ref = "adventure" }
adventure-text-serializer-ansi = { module = "net.kyori:adventure-text-serializer-ansi", version.ref = "adventure"}
adventure-text-serializer-gson = { module = "net.kyori:adventure-text-serializer-gson", version.ref = "adventure" }
adventure-text-serializer-plain = { module = "net.kyori:adventure-text-serializer-plain", version.ref = "adventure" }
adventure-serializer-configurate4 = { module = "net.kyori:adventure-serializer-configurate4", version.ref = "adventure" }
adventure-platform-fabric = { module = "net.kyori:adventure-platform-fabric", version.ref = "adventure-fabric"}
adventure-text-logger-slf4j = { module = "net.kyori:adventure-text-logger-slf4j"}

configurate-core = { module = "org.spongepowered:configurate-core", version.ref = "configurate" }
configurate-extra-kotlin = { module = "org.spongepowered:configurate-extra-kotlin", version.ref = "configurate" }
configurate-gson = { module = "org.spongepowered:configurate-gson", version.ref = "configurate" }
configurate-hocon = { module = "org.spongepowered:configurate-hocon", version.ref = "configurate" }
configurate-xml = { module = "org.spongepowered:configurate-xml", version.ref = "configurate" }
configurate-yaml = { module = "org.spongepowered:configurate-yaml", version.ref = "configurate" }

cloud-core = { module = "org.incendo:cloud-core", version.ref = "cloud-command" }
cloud-kotlin-extensions = { module = "org.incendo:cloud-kotlin-extensions", version.ref = "cloud-command" }
cloud-minecraft-extras = { module = "org.incendo:cloud-minecraft-extras", version.ref = "cloud-command-minecraft" }
cloud-fabric = { module = "org.incendo:cloud-fabric", version.ref = "cloud-command-minecraft-modded" }
cloud-paper = { module = "org.incendo:cloud-paper", version.ref = "cloud-command-minecraft" }

event = { module = "net.voxelpi.event:event", version.ref = "event" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter" }

kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutine" }

# Logging
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
log4j-slf4j-impl = { module = "org.apache.logging.log4j:log4j-slf4j-impl", version.ref = "log4j" }

# CLI
terminalconsoleappender = { module = "net.minecrell:terminalconsoleappender", version.ref = "terminalconsoleappender" }
jline-terminal-core = { module = "org.jline:jline-terminal", version.ref = "jline" }
jline-terminal-jni = { module = "org.jline:jline-terminal-jni", version.ref = "jline" }
jline-terminal-reader = { module = "org.jline:jline-reader", version.ref = "jline" }

# Fabric
minecraft = { module = "com.mojang:minecraft", version.ref = "minecraft"}
yarn = { module = "net.fabricmc:yarn", version.ref = "yarn"}
fabric-api = { module = "net.fabricmc.fabric-api:fabric-api", version.ref = "fabric-api"}
fabric-language-kotlin = { module = "net.fabricmc:fabric-language-kotlin", version.ref = "fabric-kotlin"}
fabric-loader = { module = "net.fabricmc:fabric-loader", version.ref = "fabric-loader"}
fabric-permission-api = { module = "me.lucko:fabric-permissions-api", version.ref = "fabric-permissions-api"}

# Plugins used in build logic
blossom = { module = "net.kyori:blossom", version.ref = "blossom" }
dokka-plugin = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
indra-common = { module = "net.kyori:indra-common", version.ref = "indra" }
indra-git = { module = "net.kyori:indra-git", version.ref = "indra" }
kotlin-jvm-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
ktlint-plugin = { module = "org.jlleitschuh.gradle:ktlint-gradle", version.ref = "ktlint" }

[bundles]
adventure = ["adventure-api", "adventure-text-minimessage", "adventure-text-serializer-gson", "adventure-text-serializer-plain", "adventure-serializer-configurate4", "adventure-text-logger-slf4j"]
cloud = ["cloud-core", "cloud-kotlin-extensions", "cloud-minecraft-extras"]
configurate-core = ["configurate-core", "configurate-extra-kotlin"]
configurate-formats = ["configurate-gson", "configurate-hocon", "configurate-yaml", "configurate-xml"]
jline = ["jline-terminal-core", "jline-terminal-jni", "jline-terminal-reader"]
build-plugins = [
    "blossom",
    "dokka-plugin",
    "indra-common",
    "indra-git",
    "kotlin-jvm-plugin",
    "ktlint-plugin",
]

[plugins]
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
dooka-javadoc = { id = "org.jetbrains.dokka-javadoc", version.ref = "dokka" }
fabric-loom = { id = "fabric-loom", version.ref = "loom" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
blossom = { id = "net.kyori.blossom", version.ref = "blossom" }
indra = { id = "net.kyori.indra", version.ref = "indra" }
indra-git = { id = "net.kyori.indra.git", version.ref = "indra" }
paperweight-userdev = { id = "io.papermc.paperweight.userdev", version.ref = "papwerweight" }
run-task = { id = "xyz.jpenilla.run-paper", version.ref = "run-task" }
shadow = { id = "com.gradleup.shadow", version.ref = "shadow" }
